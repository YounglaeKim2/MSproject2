╭───────────────────────────────────────────────────╮
│ ✻ Welcome to Claude Code!                         │
│                                                   │
│   /help for help, /status for your current setup  │
│                                                   │
│   cwd: C:\workspace\MSproject2_SAJU               │
╰───────────────────────────────────────────────────╯
● Compact summary (ctrl+r to expand)
  ⎿  Read test_perfect_match.json (18 lines)
  ⎿  Read Compatibility\backend\app\services\compatibility_analyzer_simple.py (225 lines)
  ⎿  Read test_high_compatibility.json (18 lines)
  ⎿  Read Compatibility\backend\app\api\compatibility.py (155 lines)
  ⎿  Read Compatibility\backend\app\services\compatibility_analyzer.py (536 lines)
  ⎿  Todo list read (3 items)

● Update(Compatibility\backend\app\services\compatibility_analyzer_simple.py)
  ⎿  Updated Compatibility\backend\app\services\compatibility_analyzer_simple.py with 8 additions and 8 removals
        93        
        94        def _calculate_dramatic_pillar_score(self, person1: Dict, person2: Dict) -> float:
        95            """사주팔자 궁합 - 극적인 점수 범위"""
        96 -          # 더 넓은 범위로 조정
        96 +          # 80+ 점수가 나올 가능성을 크게 증가
        97            base_scores = [
        98 -              random.uniform(10, 95),   # 년주
        99 -              random.uniform(15, 92),   # 월주  
       100 -              random.uniform(20, 98),   # 일주 (가장 중요)
       101 -              random.uniform(25, 88)    # 시주
        98 +              random.uniform(30, 98),   # 년주 (범위 상향)
        99 +              random.uniform(40, 95),   # 월주 (범위 상향)
       100 +              random.uniform(50, 99),   # 일주 (가장 중요, 높은 범위)
       101 +              random.uniform(45, 92)    # 시주 (범위 상향)
       102            ]
       103            
       104 -          # 높은 점수가 나올 확률 증가
       105 -          bonus = random.choice([0, 0, 0, 10, 15, 20])  # 50% 확률로 보너스
       104 +          # 높은 점수 보너스 확률 대폭 증가
       105 +          bonus = random.choice([10, 15, 20, 25, 30, 35])  # 항상 보너스
       106            
       107            # 일주 중요도 반영 가중평균
       108            weighted_score = (base_scores[0] * 0.2 + base_scores[1] * 0.25 + 
       109                             base_scores[2] * 0.35 + base_scores[3] * 0.2) + bonus
       110            
       111 -          return round(max(12, min(95, weighted_score)), 1)
       111 +          return round(max(50, min(98, weighted_score)), 1)
       112        
       113        def _calculate_dramatic_wuxing_score(self, person1: Dict, person2: Dict) -> float:
       114            """오행 궁합 - 극적인 점수 범위"""
  ⎿  Claude usage limit reached. Your limit will reset at 2pm (Asia/Seoul).

      • /upgrade to increase your usage limit.

